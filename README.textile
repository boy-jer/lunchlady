At infochimps, we buy lunch for everyone in the office(*), and it's always a pain to wrangle everyone's order in on time.

Hooray weekend app!

Lunchlady will

* Help you know which restaurants are the best-loved, or overpriced, or haven't been ordered from in a while
* Remember everyone's past orders, if they don't get one in on time
* Make your office manager happy, which is the secret to a successful business

Have some more Sloppy Joes!

Until I get around to password protecting the app, you can "try it out":http://lunchlady.heroku.com at http://lunchlady.heroku.com thanks Heroku! The app is based on my fork of the "Greendog rails template.":https://github.com/mrflip/greendog-rails-template

<em>(* One of many reasons you should "come work with us":http://infochimps.com/ -- there is such a thing as a free lunch!)</em>

---------------------------------------------------------------------------

h2. TODO

* Remember past orders for restaurant and suggest them to user
* validations
* Vote for a restaurant
* http://infochimps.com/datasets/city-of-austin-restaurant-inspection-scores--2
* Stats:
  - How long since we last ordered from a restaurant
  - Average per-head order price
  - consensus rating.

---------------------------------------------------------------------------

!https://github.com/mrflip/lunchlady/raw/master/public/images/lunchlady_doris.png!
  
---------------------------------------------------------------------------

h2. Behavior

h4. As a visitor to the homepage

* I should be invited to sign in or sign up if I'm not logged in.
* If I am logged in, I should be able to quickly place my order and know that it was received.

h4. As a person placing an order

* It's easy to find the restaurant's menu
* It's straightforward to type in a new order and its price
* I can call up an old order if I always get the same thing

* I can enter an order for another person
* I'm prevented from creating two orders for the same person and meal

h4. As a Lunchmeister organizing a meal

* I can create a new meal efficiently
* I get a few good robo-suggestions for the restaurant, but have absolute supreme unquestioned authority to choose any restaurant
* I can change the restaurant for a meal
  - It should be possible (but difficult) to do this once any orders have been set.
  - changing the restaurant should delete all current orders

h4. As a Lunchmeister finalizing a meal

* I can see
  - the phone number and other details of the restaurant
  - all the orders that have been placed
  - the total expected cost and the suggested tip
  - whether orders from people who typically order lunch are missing
* I can enter a "best-guess" order for somebody who hasn't ordered
* I can see metrics on each restaurant to ask for a discount, and to make sure any minimum monthly order target is hit.

h4. As a team optimizing for overall joy

* We can see 
  - actual overall price per person for each restaurant
  - how long it's been since we ordered from the restaurant
  - how much people love the restaurant
* We can make sure everyone's favorite restaurant is cycled through, even if it's not the team consensus
* So that metrics are accurate, I should not be able to edit a past meal or order, and should not be able to create ones in the unrealistic future
* restaurant votes are fair:
  - each user's votes are adjusted to their mean
  - only include regulars

h4. So that we can have visitors over

* I can invite a guest to the office and pay out-of-pocket for their meal
* We can have visitors over who will pay for their own meal.
* Correct accounting for team, company guests and co-paid guests

h4. As a team that is efficient and open, but not too open

* I should be able to place an order for another person
* If I'm logged in I can do anything, but am discouraged from doing stupid things
* It's easy for a guest to sign up given a minimal token
* It's difficult for a griefer to get an account

* If I am not logged in, the only pages I can view are
  - the homepage, which shows only some stuff
  - the login, signup, and password recovery pages

h4. Account

* list all users:
  - all users (with link), email, avatar, number of orders, is_local
* show any user:
  - user info, user metrics, past orders
* log out:
  - link on top when I'm signed in, not when I'm signed out.
* log in:
  - link on top when I'm signed out, not when I'm signed in.               
* register new account:
  - link on top when I'm signed out, not when I'm signed in.
  - prompts for full name, email, is_local, 
* edit my account:
  - name, email, is_local
  - change password

h4. Questions

How to vote?
* Star ratings on restaurants
* Place a token to lobby for a restaurant to be chosen

---------------------------------------------------------------------------


h2. Object Models

User
  name
  email
  --
  has_many :orders
  has_many :meals, :through => orders
  has_many :votes
  --
  todays_meal

restaurant
  phone number
  main url
  meal form URL
  address
  tags
  --
  has_many :meals
  has_many :orders, :through => meals

order
  restaurant_id
  belongs_to :restaurant
  has_many :orders
  has_many :users, :through => :orders

meal
  user_id
  meal_id
  description
  price
  copay
  guest_of
  created_by
  created_at
  --
  belongs_to :user
  belongs_to :meal
  has_one :restaurant, :through => :meal

restaurant tags
  tags
  delivers
  delivery_fee
  tip_percent
  discount_percent

  restaurant inspection link
  yelp link
  
user
  is_guest

  
